<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.joostvdg.cmg</groupId>
  <artifactId>cmg-analytics2</artifactId>
  <version>0.1</version>
  <packaging>${packaging}</packaging>

  <parent>
    <groupId>io.micronaut</groupId>
    <artifactId>micronaut-parent</artifactId>
    <version>3.3.4</version>
  </parent>

  <developers>
    <developer>
      <name>Joost van der Griendt</name>
      <email>joostvdg@protonmail.com</email>
      <timezone>CET</timezone>
      <url>http://github.com/joostvdg</url>
    </developer>
  </developers>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <packaging>jar</packaging>
    <jdk.version>17</jdk.version>
    <release.version>17</release.version>
    <micronaut.version>3.3.4</micronaut.version>
    <jib.docker.image>${project.artifactId}</jib.docker.image>
    <jib.docker.tag>${project.version}</jib.docker.tag>
    <exec.mainClass>com.github.joostvdg.cmg.Application</exec.mainClass>
    <micronaut.data.version>3.2.2</micronaut.data.version>
    <micronaut.runtime>netty</micronaut.runtime>
    <postgres.driver.version>9.2-1002.jdbc4</postgres.driver.version>
    <testcontainers.version>1.16.3</testcontainers.version>
<!--    <db.url>jdbc:tc:postgresql:12:///cmg?TC_DAEMON=true</db.url>-->
    <db.username>postgres</db.username>
    <db.password>postgres</db.password>
<!--    <db.url>jdbc:postgresql://localhost:8432/cmg</db.url>-->
<!--    <db.name>cmg</db.name>-->
<!--    <db.password>admin</db.password>-->
<!--    <db.user>admin</db.user>-->
  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-inject</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-validation</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.test</groupId>
      <artifactId>micronaut-test-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-http-client</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-http-server-netty</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-jackson-databind</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-parameter-names</artifactId>
      <version>2.13.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-management</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-runtime</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.data</groupId>
      <artifactId>micronaut-data-jdbc</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.flyway</groupId>
      <artifactId>micronaut-flyway</artifactId>
      <scope>compile</scope>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>io.micronaut.kubernetes</groupId>-->
<!--      <artifactId>micronaut-kubernetes-discovery-client</artifactId>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->
    <dependency>
      <groupId>io.micronaut.micrometer</groupId>
      <artifactId>micronaut-micrometer-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.micrometer</groupId>
      <artifactId>micronaut-micrometer-registry-prometheus</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.security</groupId>
      <artifactId>micronaut-security-jwt</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.sql</groupId>
      <artifactId>micronaut-jdbc-hikari</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.sql</groupId>
      <artifactId>micronaut-jooq</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.tracing</groupId>
      <artifactId>micronaut-tracing-zipkin</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <scope>compile</scope>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.apache.logging.log4j</groupId>-->
<!--      <artifactId>log4j-core</artifactId>-->
<!--      <version>2.17.1</version>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <!-- 04 Testcontainers Start -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.4.1</version>
    </dependency>
    <!-- 04 Testcontainers ends-->

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>org.apache.logging.log4j</groupId>-->
<!--      <artifactId>log4j-api</artifactId>-->
<!--      <version>2.17.1</version>-->
<!--      <scope>runtime</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>org.apache.logging.log4j</groupId>-->
<!--      <artifactId>log4j-slf4j-impl</artifactId>-->
<!--      <version>2.17.1</version>-->
<!--      <scope>runtime</scope>-->
<!--    </dependency>-->
  </dependencies>

  <build>
    <plugins>
      <!-- https://micronaut-projects.github.io/micronaut-maven-plugin/latest/examples/package.html -->
<!--      <plugin>-->
<!--        <groupId>org.graalvm.buildtools</groupId>-->
<!--        <artifactId>native-maven-plugin</artifactId>-->
<!--        <version>0.9.11</version>-->
<!--        <configuration>-->
<!--          <buildArgs combine.children="append">-->
<!--            &lt;!&ndash; https://github.com/oracle/graal/issues/3526 &ndash;&gt;-->
<!--&lt;!&ndash;            <buildArg>&#45;&#45;language:js</buildArg>&ndash;&gt;-->
<!--&lt;!&ndash;            <buildArg> &#45;&#45;trace-class-initialization=org.apache.logging.slf4j.Log4jLogger</buildArg>&ndash;&gt;-->
<!--            <buildArg>&#45;&#45;initialize-at-run-time=org.apache.logging.slf4j.Log4jLogger</buildArg>-->
<!--          </buildArgs>-->
<!--        </configuration>-->
<!--      </plugin>-->

      <plugin>
        <groupId>io.micronaut.build</groupId>
        <artifactId>micronaut-maven-plugin</artifactId>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- Uncomment to enable incremental compilation -->
          <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->

          <annotationProcessorPaths combine.children="append">
            <path>
              <groupId>io.micronaut</groupId>
              <artifactId>micronaut-http-validation</artifactId>
              <version>${micronaut.version}</version>
            </path>
            <path>
              <groupId>io.micronaut.data</groupId>
              <artifactId>micronaut-data-processor</artifactId>
              <version>${micronaut.data.version}</version>
            </path>
            <path>
              <groupId>io.micronaut.openapi</groupId>
              <artifactId>micronaut-openapi</artifactId>
              <version>${micronaut.openapi.version}</version>
            </path>
            <path>
              <groupId>io.micronaut.security</groupId>
              <artifactId>micronaut-security-annotations</artifactId>
              <version>${micronaut.security.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Amicronaut.processing.group=com.github.joostvdg.cmg</arg>
            <arg>-Amicronaut.processing.module=cmg-analytics2</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!-- Much better if there was a testcontainers lifecycle management plugin!
                 Upvote here if you like the idea: https://github.com/testcontainers/testcontainers-java/issues/4397 -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                db = new org.testcontainers.containers.PostgreSQLContainer("postgres:12")
                        .withUsername("${db.username}")
                        .withDatabaseName("cmg")
                        .withPassword("${db.password}");
                db.start();
                project.properties.setProperty('db.url', db.getJdbcUrl());
              </source>
            </configuration>
          </execution>
        </executions>

        <dependencies>
          <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
          </dependency>
          <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>7.14.0</version>
        <executions>
          <execution>
            <id>integration-test-database-setup</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
              <goal>migrate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.4.1</version>
          </dependency>
          <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <schemas>public</schemas>
          <url>${db.url}</url>
          <user>${db.username}</user>
          <password>${db.password}</password>
<!--          <locations>-->
<!--            <location>filesystem:src/main/resources/databasemigrations</location>-->
<!--          </locations>-->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>3.14.15</version>
        <executions>
          <execution>
            <id>jooq-codegen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.4.1</version>
          </dependency>
          <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <jdbc>
<!--            <driver>org.testcontainers.jdbc.ContainerDatabaseDriver</driver>-->
            <url>${db.url}</url>
            <user>${db.username}</user>
            <password>${db.password}</password>
          </jdbc>
          <generator>
            <name>org.jooq.codegen.JavaGenerator</name>
            <database>
              <inputSchema>public</inputSchema>
            </database>
            <target>
              <packageName>com.github.joostvdg.cmg.analytics</packageName>
              <directory>gensrc/main/java</directory>
            </target>
          </generator>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>gensrc/main/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
